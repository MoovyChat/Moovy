import { db } from '../init';
import { User } from '../schema/schema';
import { UserCollection } from './constants';
import { doc, setDoc, getDoc, updateDoc, deleteDoc } from 'firebase/firestore';

// Creating the user - Adding the new user to the 'user' collection in the
// firestore db
export const createUser = (user: User): Promise<void> => {
  return new Promise(async (resolve, reject) => {
    let newUser: User = {
      nickname: user.name,
      uid: '1',
      name: user.name,
      email: user.email,
    };
    const userRef = doc(db, UserCollection, user.uid);
    await setDoc(userRef, newUser)
      .then(() => resolve())
      .catch((err) => reject(`ERR: Failed registering ${user.name} as a user`));
  });
};

// Get user data from the firestore db
export const getUser = (userId: string): Promise<User> => {
  const userRef = doc(db, UserCollection, userId);
  return new Promise(async (resolve, reject) => {
    const userSnap = await getDoc(userRef);
    if (userSnap.exists()) {
      resolve(userSnap.data() as User);
    } else {
      reject('ERR: User data not found!');
    }
  });
};

// Update the user in the firestore db
// No need to send the whole User as a parameter, We just need to send the
// field which needs to be updated. 'newUserData' needs to be an object.
export const updateUser = (userId: string, newUserData: {}): Promise<void> => {
  const userRef = doc(db, UserCollection, userId);
  return new Promise(async (resolve, reject) => {
    await updateDoc(userRef, newUserData)
      .then((res) => resolve())
      .catch((err) => reject(`ERR: Unable to update ${userId}'s data`));
  });
};

// Deleting the user from the firestore db
// We will not be giving this feature to the user. User needs to request for
// Account deletion.
export const deleteUser = (userId: string): Promise<void> => {
  const userRef = doc(db, UserCollection, userId);
  return new Promise(async (resolve, reject) => {
    await deleteDoc(userRef)
      .then(() => resolve())
      .catch((err) => reject(`ERR: Unable to delete ${userId}'s data`));
  });
};
