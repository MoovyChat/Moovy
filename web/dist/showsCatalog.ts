import{r as i,S as h,a as s,j as c,C as d,i as u}from"./index.js";import{a as T}from"./catalog.styles.ts";import S from"./emptyPage.ts";import{H as w}from"./Helmet.ts";import{T as x}from"./titleCard.ts";import{u as y}from"./useFetchMoreTitles.ts";import"./styled-components.browser.esm.ts";import"./CSSTransition.ts";import"./inheritsLoose.ts";const N=()=>{const l=i.useRef(null),[o,n]=i.useState([]),[r]=h({variables:{type:"show",first:15,after:""},pause:u()});i.useMemo(()=>{const{data:t,error:e,fetching:f}=r;if(e&&console.log(e),!f&&t){const a=t.getPaginatedTitles,g=a==null?void 0:a.nodes;n(g)}},[r]);const{fetchMore:m}=y("show",n,r),p=t=>{t.stopPropagation();const e=t.target;e.scrollHeight-e.scrollTop-2<=e.clientHeight&&m()};return o&&o.length<=0?s(S,{msg:"Shows catalog is empty"}):c(T,{ref:l,onScroll:p,children:[c(w,{children:[s("title",{children:"Moovy: Shows"}),s("meta",{name:"description",content:"List of all shows"}),s("link",{rel:"canonical",href:`${d}/catalog/shows`})]}),o&&o.map((t,e)=>s(x,{title:t,parentRef:l,index:e+1,totalItems:o.length},t.id))]})};export{N as default};
