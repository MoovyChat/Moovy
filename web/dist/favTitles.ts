import{e as h,r,B as F,a as t,j as p,F as S,C as T,i as P}from"./index.js";import{H as x}from"./Helmet.ts";import E from"./notFound.ts";import{T as $}from"./titleListTemplate.ts";import{u as j}from"./isAuthUser.ts";import"./moovy-white.ts";import"./styled-components.browser.esm.ts";import"./emptyPage.ts";import"./CSSTransition.ts";import"./inheritsLoose.ts";import"./favorites.styles.ts";import"./loading.ts";import"./loading.styles.ts";import"./movieCard.ts";import"./image.ts";import"./movieCard.styles.ts";import"./movieInfo.ts";import"./index.esm.ts";import"./iconBase.ts";import"./helpers.ts";import"./hooks.ts";import"./index.ts";const K=()=>{const{id:e}=h();j();const[a,n]=r.useState(1),[c,l]=r.useState([]),[f,u]=r.useState(1),[s]=F({variables:{page:a,uid:e,limit:6},pause:P()});return r.useEffect(()=>{const{data:i,error:o,fetching:v}=s;if(o&&console.log(o),!v&&i){const m=i.getFavTitles,g=m.movieStats;l(()=>g);const d=m.lastPage;u(()=>d)}},[s]),s.error?t(E,{}):p(S,{children:[p(x,{children:[t("title",{children:`${e}: Favorites`}),t("meta",{name:"description",content:`${e}: Favorites`}),t("link",{rel:"canonical",href:`${T}/activity/${e}/favorites`})]}),t($,{page:a,setPage:n,fetching:s.fetching,lastPage:f,movieStatsData:c})]})};export{K as default};
