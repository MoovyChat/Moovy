import{e as h,r as s,M as k,a as t,j as p,F as S,C as v,i as L}from"./index.js";import{H as P}from"./Helmet.ts";import x from"./notFound.ts";import{T as E}from"./titleListTemplate.ts";import{u as $}from"./isAuthUser.ts";import"./moovy-white.ts";import"./styled-components.browser.esm.ts";import"./emptyPage.ts";import"./CSSTransition.ts";import"./inheritsLoose.ts";import"./favorites.styles.ts";import"./loading.ts";import"./loading.styles.ts";import"./movieCard.ts";import"./image.ts";import"./movieCard.styles.ts";import"./movieInfo.ts";import"./index.esm.ts";import"./iconBase.ts";import"./helpers.ts";import"./hooks.ts";import"./index.ts";const K=()=>{const{id:e}=h();$();const[r,n]=s.useState(1),[l,c]=s.useState([]),[d,u]=s.useState(1),[i]=k({variables:{page:r,uid:e,limit:6},pause:L()});return s.useEffect(()=>{const{data:o,error:a,fetching:f}=i;if(a&&console.log(a),!f&&o){const m=o.getLikedTitles,g=m.movieStats;c(()=>g);const T=m.lastPage;u(()=>T)}},[i]),i.error?t(x,{}):p(S,{children:[p(P,{children:[t("title",{children:`${e}: Liked Titles`}),t("meta",{name:"description",content:`${e}: Liked Titles`}),t("link",{rel:"canonical",href:`${v}/activity/${e}/liked`})]}),t(E,{page:r,setPage:n,fetching:i.fetching,lastPage:d,movieStatsData:l})]})};export{K as default};
